# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-11-06 21:35
from __future__ import unicode_literals

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import taggit.managers

from django.contrib.postgres.operations import UnaccentExtension, TrigramExtension

class Migration(migrations.Migration):

    dependencies = [
        ('mpa', '0006_auto_20171106_2135'),
        ('postgres_search_extensions', '0001_initial')
    ]

    operations = [
        migrations.RunSQL([
            '''CREATE INDEX idx_fts_mpa_name ON mpa_mpa USING gin( 
                (
                    to_tsvector('english_unaccent'::regconfig, COALESCE("mpa_mpa"."name", ''))
                    || to_tsvector('english_unaccent'::regconfig, COALESCE("mpa_mpa"."designation", ''))
                    || to_tsvector('english_unaccent'::regconfig, COALESCE("mpa_mpa"."designation_eng", '')) 
                ),
                (
                    to_tsvector('simple_unaccent'::regconfig, COALESCE("mpa_mpa"."name", ''))
                    || to_tsvector('simple_unaccent'::regconfig, COALESCE("mpa_mpa"."designation", ''))
                    || to_tsvector('simple_unaccent'::regconfig, COALESCE("mpa_mpa"."designation_eng", '')) 
                )
            );''',
            '''CREATE INDEX idx_trgm_mpa_name ON mpa_mpa USING GIN( 
                UPPER(f_unaccent(name)::text) gin_trgm_ops,
                UPPER(f_unaccent(designation)::text) gin_trgm_ops,
                UPPER(f_unaccent(designation_eng)::text) gin_trgm_ops
            );''',
        ]),
    ]

'''
EXPLAIN ANALYZE SELECT COUNT(*) FROM 
    (
        SELECT 
            "mpa_mpa"."mpa_id" AS Col1, 
            (
                (
                    to_tsvector('english_unaccent'::regconfig, COALESCE("mpa_mpa"."name", '')) || 
                    to_tsvector('english_unaccent'::regconfig, COALESCE("mpa_mpa"."designation", ''))
                ) 
                || to_tsvector('english_unaccent'::regconfig, COALESCE("mpa_mpa"."designation_eng", ''))
            ) AS "search"
            FROM "mpa_mpa"
            WHERE (
                NOT ("mpa_mpa"."verification_state" = 'Rejected as MPA')
                AND (
                    UPPER(f_unaccent("mpa_mpa"."name")::text) LIKE '%' || UPPER(REPLACE(REPLACE(REPLACE((f_unaccent('Papahanaumokuakea')), '\', '\\'), '%', '\%'), '_', '\_')) || '%' 
                    OR UPPER(f_unaccent("mpa_mpa"."designation")::text) LIKE '%' || UPPER(REPLACE(REPLACE(REPLACE((f_unaccent('Papahanaumokuakea')), '\', '\\'), '%', '\%'), '_', '\_')) || '%' 
                    OR UPPER(f_unaccent("mpa_mpa"."designation_eng")::text) LIKE '%' || UPPER(REPLACE(REPLACE(REPLACE((f_unaccent('Papahanaumokuakea')), '\', '\\'), '%', '\%'), '_', '\_')) || '%' 
                    OR (
                        (to_tsvector('english_unaccent'::regconfig, COALESCE("mpa_mpa"."name", '')) || to_tsvector('english_unaccent'::regconfig, COALESCE("mpa_mpa"."designation", ''))) 
                        || to_tsvector('english_unaccent'::regconfig, COALESCE("mpa_mpa"."designation_eng", ''))
                    ) @@ (plainto_tsquery('english_unaccent'::regconfig, 'Papahanaumokuakea')) = true
                )
            ) GROUP BY 
                "mpa_mpa"."mpa_id", 
                ((to_tsvector('english_unaccent'::regconfig, COALESCE("mpa_mpa"."name", '')) || to_tsvector('english_unaccent'::regconfig, COALESCE("mpa_mpa"."designation", ''))) || to_tsvector('english_unaccent'::regconfig, COALESCE("mpa_mpa"."designation_eng", '')))
    ) subquery;

'''


