# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2017-11-09 10:49
from __future__ import unicode_literals

import ckeditor.fields
import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import filer.fields.image
import taggit.managers


class Migration(migrations.Migration):
    
    initial = True

    dependencies = [
        ('category', '0001_squashed_0002_auto_20171106_2137'),
        ('filer', '0007_auto_20161016_1055'),
        ('reversion', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agency', models.CharField(max_length=500)),
                ('url', models.URLField(blank=True, max_length=500, null=True)),
                ('email', models.EmailField(blank=True, max_length=500, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mpa',
            fields=[
                ('mpa_id', models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name=b'MPA id')),
                ('wdpa_id', models.IntegerField(blank=True, help_text=b'WDPA ID code. You probably should not be changing this.', null=True, verbose_name=b'WDPA id')),
                ('usmpa_id', models.CharField(blank=True, help_text=b'US NOAA MPA Center ID. You probably should not be changing this.', max_length=50, null=True, verbose_name=b'US MPA id')),
                ('other_ids', models.CharField(blank=True, help_text=b'ID codes used by other groups to identify this area, e.g., TNC Caribbean or Coral Triangle Atlas ids.', max_length=1000, null=True, verbose_name=b'Other reference id codes')),
                ('name', models.CharField(help_text=b'Protected area name not including designation title', max_length=254, verbose_name=b'Name')),
                ('long_name', models.CharField(blank=True, max_length=254)),
                ('short_name', models.CharField(blank=True, help_text=b'Nickname if any', max_length=254)),
                ('slug', models.CharField(blank=True, max_length=254)),
                ('sovereign', models.CharField(blank=True, max_length=50, null=True, verbose_name=b'Sovereign Country')),
                ('country', models.CharField(max_length=50, verbose_name=b'Country / Territory')),
                ('sub_location', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Sub Location')),
                ('is_mpa', models.BooleanField(default=True)),
                ('verification_state', models.CharField(choices=[(b'Unverified', b'Unverified'), (b'Cannot Verify', b'Cannot Verify'), (b'Rejected as MPA', b'Rejected as MPA'), (b'Internally Verified', b'Internally Verified'), (b'Externally Verified', b'Externally Verified')], default=b'Unverified', max_length=100, verbose_name=b'Verification State')),
                ('verification_reason', models.CharField(blank=True, max_length=1000, null=True, verbose_name=b'Verification Reason')),
                ('verified_by', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'Verified By')),
                ('verified_date', models.DateField(blank=True, null=True, verbose_name=b'Date Verified')),
                ('designation', models.CharField(blank=True, max_length=254, null=True, verbose_name=b'Designation')),
                ('designation_eng', models.CharField(blank=True, max_length=254, null=True, verbose_name=b'English Designation')),
                ('designation_type', models.CharField(blank=True, choices=[(b'National', b'National'), (b'International', b'International')], max_length=20, null=True, verbose_name=b'Designation Type')),
                ('iucn_category', models.CharField(blank=True, choices=[(b'Ia', b'Ia'), (b'Ib', b'Ib'), (b'II', b'II'), (b'III', b'III'), (b'IV', b'IV'), (b'V', b'V'), (b'VI', b'VI')], max_length=20, null=True, verbose_name=b'IUCN Category')),
                ('int_criteria', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'International Criteria')),
                ('marine', models.NullBooleanField(default=True, editable=False, verbose_name=b'Marine (field from WDPA)')),
                ('status', models.CharField(blank=True, choices=[(b'Proposed', b'Proposed'), (b'Designated', b'Designated'), (b'Defunct/Degazetted', b'Defunct/Degazetted')], default=b'Designated', max_length=100, null=True, verbose_name=b'Status')),
                ('status_year', models.IntegerField(blank=True, null=True, verbose_name=b'Status Year')),
                ('implemented', models.BooleanField(default=True, help_text=b'MPA is designated and implemented with regulations enforced', verbose_name=b'Implemented?')),
                ('implementation_date', models.DateField(blank=True, help_text=b'Date regulations went into effect or will go into effect', null=True, verbose_name=b'Implementation Date')),
                ('no_take', models.CharField(choices=[(b'None', b'None'), (b'Part', b'Part'), (b'All', b'All'), (b'Not Reported', b'Not Reported')], default=b'Not Reported', max_length=100, verbose_name=b'No Take')),
                ('no_take_area', models.FloatField(blank=True, null=True, verbose_name='No Take Area km²')),
                ('rep_m_area', models.FloatField(blank=True, null=True, verbose_name='Reported Marine Area km²')),
                ('calc_m_area', models.FloatField(blank=True, null=True, verbose_name='Calculated Marine Area km²')),
                ('rep_area', models.FloatField(blank=True, null=True, verbose_name='Reported Area km²')),
                ('calc_area', models.FloatField(blank=True, null=True, verbose_name='Calculated Area km²')),
                ('gov_type', models.CharField(blank=True, max_length=254, null=True, verbose_name=b'Governance Type')),
                ('mgmt_auth', models.CharField(blank=True, max_length=254, null=True, verbose_name=b'Management Authority')),
                ('mgmt_plan_type', models.CharField(blank=True, max_length=254, null=True, verbose_name=b'Management Plan Type')),
                ('mgmt_plan_ref', models.CharField(blank=True, max_length=254, null=True, verbose_name=b'Management Plan Reference')),
                ('conservation_effectiveness', models.CharField(blank=True, choices=[(b'Unknown', b'Unknown'), (b'High', b'High'), (b'Medium', b'Medium'), (b'Low', b'Low')], default=b'Unknown', max_length=254, null=True)),
                ('protection_level', models.CharField(blank=True, choices=[(b'Unknown', b'Unknown'), (b'Strongly Protected', b'Strongly Protected'), (b'Moderately Protected', b'Moderately Protected'), (b'Protected', b'Protected'), (b'Managed', b'Managed')], default=b'Unknown', editable=False, max_length=254, null=True)),
                ('fishing', models.CharField(blank=True, choices=[(b'Unknown', b'Unknown'), (b'Yes', b'Yes'), (b'No', b'No'), (b'Some Restrictions', b'Some Restrictions')], default=b'Unknown', max_length=254, null=True)),
                ('fishing_info', models.TextField(blank=True, null=True)),
                ('fishing_citation', models.TextField(blank=True, null=True)),
                ('access', models.CharField(blank=True, choices=[(b'Unknown', b'Unknown'), (b'Yes', b'Yes'), (b'No', b'No'), (b'Restricted', b'Restricted')], default=b'Unknown', max_length=254, null=True)),
                ('access_info', models.TextField(blank=True, null=True)),
                ('access_citation', models.TextField(blank=True, null=True)),
                ('primary_conservation_focus', models.CharField(blank=True, choices=[(b'Unknown', b'Unknown'), (b'Biodiversity Protection', b'Biodiversity Protection'), (b'Biomass Enhancement', b'Biomass Enhancement'), (b'Cultural Heritage', b'Cultural Heritage')], default=b'Unknown', max_length=254, null=True)),
                ('secondary_conservation_focus', models.CharField(blank=True, choices=[(b'Unknown', b'Unknown'), (b'Biodiversity Protection', b'Biodiversity Protection'), (b'Biomass Enhancement', b'Biomass Enhancement'), (b'Cultural Heritage', b'Cultural Heritage')], default=b'Unknown', max_length=254, null=True)),
                ('tertiary_conservation_focus', models.CharField(blank=True, choices=[(b'Unknown', b'Unknown'), (b'Biodiversity Protection', b'Biodiversity Protection'), (b'Biomass Enhancement', b'Biomass Enhancement'), (b'Cultural Heritage', b'Cultural Heritage')], default=b'Unknown', max_length=254, null=True)),
                ('conservation_focus_info', models.TextField(blank=True, null=True)),
                ('conservation_focus_citation', models.TextField(blank=True, null=True)),
                ('protection_focus', models.CharField(blank=True, choices=[(b'Unknown', b'Unknown'), (b'Ecosystem', b'Ecosystem'), (b'Focal Species', b'Focal Species')], default=b'Unknown', max_length=254, null=True)),
                ('protection_focus_info', models.TextField(blank=True, null=True)),
                ('protection_focus_citation', models.TextField(blank=True, null=True)),
                ('constancy', models.CharField(blank=True, choices=[(b'Unknown', b'Unknown'), (b'Year-round', b'Year-round'), (b'Seasonal', b'Seasonal'), (b'Temporary', b'Temporary')], default=b'Unknown', max_length=254, null=True)),
                ('constancy_citation', models.TextField(blank=True, null=True)),
                ('permanence', models.CharField(blank=True, choices=[(b'Unknown', b'Unknown'), (b'Permanent', b'Permanent'), (b'Non-Permanent', b'Non-Permanent'), (b'Non-Permanent - Conditional', b'Non-Permanent - Conditional'), (b'Non-Permanent - Temporary', b'Non-Permanent - Temporary')], default=b'Unknown', max_length=254, null=True)),
                ('permanence_citation', models.TextField(blank=True, null=True)),
                ('wdpa_notes', models.CharField(blank=True, editable=False, max_length=250, null=True, verbose_name=b'Area Notes (from WDPA)')),
                ('notes', models.TextField(blank=True, default=b'', null=True, verbose_name=b'Area Notes')),
                ('summary', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name=b'MPA Summary Site Description')),
                ('is_point', models.BooleanField(default=False)),
                ('geom_smerc', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, editable=False, null=True, srid=3857)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, editable=False, null=True, srid=4326)),
                ('geog', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, editable=False, geography=True, null=True, srid=4326)),
                ('simple_geom_smerc', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, editable=False, null=True, srid=3857)),
                ('simple_geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, editable=False, null=True, srid=4326)),
                ('simple_geog', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, editable=False, geography=True, null=True, srid=4326)),
                ('point_geom_smerc', django.contrib.gis.db.models.fields.MultiPointField(blank=True, editable=False, null=True, srid=3857)),
                ('point_geom', django.contrib.gis.db.models.fields.MultiPointField(blank=True, editable=False, null=True, srid=4326)),
                ('point_geog', django.contrib.gis.db.models.fields.MultiPointField(blank=True, editable=False, geography=True, null=True, srid=4326)),
                ('point_within', django.contrib.gis.db.models.fields.PointField(blank=True, editable=False, null=True, srid=4326)),
                ('bbox_lowerleft', django.contrib.gis.db.models.fields.PointField(blank=True, editable=False, null=True, srid=4326)),
                ('bbox_upperright', django.contrib.gis.db.models.fields.PointField(blank=True, editable=False, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='CandidateInfo',
            fields=[
                ('mpa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='mpa.Mpa')),
                ('summary', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='Candidate MPA Summary Description')),
                ('source', models.CharField(blank=True, max_length=1000, null=True)),
                ('scope', models.CharField(blank=True, choices=[('Site', 'Site'), ('Seascape', 'Seascape')], default='Site', max_length=250, null=True)),
                ('basin', models.CharField(blank=True, max_length=250, null=True)),
                ('region', models.CharField(blank=True, max_length=250, null=True)),
                ('location', models.CharField(blank=True, max_length=1000, null=True)),
                ('eez_or_highseas', models.CharField(blank=True, max_length=1000, null=True)),
                ('lead_organization', models.CharField(blank=True, max_length=500, null=True)),
                ('partner_organizations', models.CharField(blank=True, max_length=1000, null=True)),
                ('key_agency_or_leader', models.CharField(blank=True, max_length=500, null=True)),
                ('timeframe', models.CharField(blank=True, max_length=500, null=True)),
                ('current_protection', models.CharField(blank=True, max_length=1000, null=True)),
                ('desired_protection', models.CharField(blank=True, max_length=1000, null=True)),
                ('importance', models.CharField(blank=True, max_length=1000, null=True)),
                ('opportunity', models.CharField(blank=True, max_length=1000, null=True)),
                ('references', models.CharField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MpaCandidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=56)),
                ('geom_smerc', django.contrib.gis.db.models.fields.MultiPointField(null=True, srid=3857)),
                ('geom', django.contrib.gis.db.models.fields.MultiPointField(null=True, srid=4326)),
                ('geog', django.contrib.gis.db.models.fields.MultiPointField(geography=True, null=True, srid=4326)),
            ],
        ),
        migrations.CreateModel(
            name='VersionMetadata',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True)),
                ('reference', models.TextField(blank=True)),
                ('revision', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='reversion.Revision')),
            ],
        ),
        migrations.CreateModel(
            name='WikiArticle',
            fields=[
                ('mpa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='mpa.Mpa')),
                ('url', models.URLField(blank=True, null=True, verbose_name='Link to Wikipedia Article')),
                ('title', models.CharField(blank=True, max_length=500, null=True)),
                ('summary', ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='MPA Site Description from Wikipedia')),
            ],
        ),
        migrations.AddField(
            model_name='mpa',
            name='categories',
            field=taggit.managers.TaggableManager(blank=True, help_text='You can assign this area to one or more categories by providing a comma-separated list of tags enclosed in quotes (e.g., [ "Shark Sanctuary", "World Heritage Site" ]', through='category.TaggedItem', to='category.Category', verbose_name='Categories'),
        ),
        migrations.AddField(
            model_name='mpa',
            name='contact',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mpa_main_set', to='mpa.Contact', verbose_name='Main Contact'),
        ),
        migrations.AddField(
            model_name='mpa',
            name='other_contacts',
            field=models.ManyToManyField(blank=True, to='mpa.Contact', verbose_name='Other Contacts'),
        ),
        migrations.CreateModel(
            name='DataSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500, verbose_name='Data Source Name')),
                ('version', models.CharField(blank=True, max_length=500, null=True, verbose_name='Version or Access Date')),
                ('url', models.URLField(blank=True, max_length=500, null=True, verbose_name='Data Source URL')),
                ('logo', filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='datasource_logos', to='filer.Image')),
            ],
        ),
        migrations.AddField(
            model_name='contact',
            name='logo',
            field=filer.fields.image.FilerImageField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='contact_logos', to='filer.Image'),
        ),
        migrations.AddField(
            model_name='mpa',
            name='datasource',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mpa_datasources', to='mpa.DataSource', verbose_name='Data Source'),
        ),
        migrations.AddField(
            model_name='mpa',
            name='glores_status',
            field=models.CharField(blank=True, choices=[('', 'None'), ('nominee', 'Nominee'), ('platinum', 'Platinum Award'), ('gold', 'Gold Award'), ('silver', 'Silver Award')], default='', max_length=100, verbose_name='GLORES Status'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='access',
            field=models.CharField(blank=True, choices=[('Unknown', 'Unknown'), ('Yes', 'Yes'), ('No', 'No'), ('Restricted', 'Restricted')], default='Unknown', max_length=254, null=True),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='conservation_effectiveness',
            field=models.CharField(blank=True, choices=[('Unknown', 'Unknown'), ('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], default='Unknown', max_length=254, null=True),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='constancy',
            field=models.CharField(blank=True, choices=[('Unknown', 'Unknown'), ('Year-round', 'Year-round'), ('Seasonal', 'Seasonal'), ('Temporary', 'Temporary')], default='Unknown', max_length=254, null=True),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='country',
            field=models.CharField(max_length=50, verbose_name='Country / Territory'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='designation',
            field=models.CharField(blank=True, max_length=254, null=True, verbose_name='Designation'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='designation_eng',
            field=models.CharField(blank=True, max_length=254, null=True, verbose_name='English Designation'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='designation_type',
            field=models.CharField(blank=True, choices=[('National', 'National'), ('International', 'International')], max_length=20, null=True, verbose_name='Designation Type'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='fishing',
            field=models.CharField(blank=True, choices=[('Unknown', 'Unknown'), ('Yes', 'Yes'), ('No', 'No'), ('Some Restrictions', 'Some Restrictions')], default='Unknown', max_length=254, null=True),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='gov_type',
            field=models.CharField(blank=True, max_length=254, null=True, verbose_name='Governance Type'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='implementation_date',
            field=models.DateField(blank=True, help_text='Date regulations went into effect or will go into effect', null=True, verbose_name='Implementation Date'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='implemented',
            field=models.BooleanField(default=True, help_text='MPA is designated and implemented with regulations enforced', verbose_name='Implemented?'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='int_criteria',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='International Criteria'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='iucn_category',
            field=models.CharField(blank=True, choices=[('Ia', 'Ia'), ('Ib', 'Ib'), ('II', 'II'), ('III', 'III'), ('IV', 'IV'), ('V', 'V'), ('VI', 'VI')], max_length=20, null=True, verbose_name='IUCN Category'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='marine',
            field=models.NullBooleanField(default=True, editable=False, verbose_name='Marine (field from WDPA)'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='mgmt_auth',
            field=models.CharField(blank=True, max_length=254, null=True, verbose_name='Management Authority'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='mgmt_plan_ref',
            field=models.CharField(blank=True, max_length=254, null=True, verbose_name='Management Plan Reference'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='mgmt_plan_type',
            field=models.CharField(blank=True, max_length=254, null=True, verbose_name='Management Plan Type'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='mpa_id',
            field=models.AutoField(editable=False, primary_key=True, serialize=False, verbose_name='MPA id'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='name',
            field=models.CharField(help_text='Protected area name not including designation title', max_length=254, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='no_take',
            field=models.CharField(choices=[('None', 'None'), ('Part', 'Part'), ('All', 'All'), ('Not Reported', 'Not Reported')], default='Not Reported', max_length=100, verbose_name='No Take'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='notes',
            field=models.TextField(blank=True, default='', null=True, verbose_name='Area Notes'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='other_ids',
            field=models.CharField(blank=True, help_text='ID codes used by other groups to identify this area, e.g., TNC Caribbean or Coral Triangle Atlas ids.', max_length=1000, null=True, verbose_name='Other reference id codes'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='permanence',
            field=models.CharField(blank=True, choices=[('Unknown', 'Unknown'), ('Permanent', 'Permanent'), ('Non-Permanent', 'Non-Permanent'), ('Non-Permanent - Conditional', 'Non-Permanent - Conditional'), ('Non-Permanent - Temporary', 'Non-Permanent - Temporary')], default='Unknown', max_length=254, null=True),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='primary_conservation_focus',
            field=models.CharField(blank=True, choices=[('Unknown', 'Unknown'), ('Biodiversity Protection', 'Biodiversity Protection'), ('Biomass Enhancement', 'Biomass Enhancement'), ('Cultural Heritage', 'Cultural Heritage')], default='Unknown', max_length=254, null=True),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='protection_focus',
            field=models.CharField(blank=True, choices=[('Unknown', 'Unknown'), ('Ecosystem', 'Ecosystem'), ('Focal Species', 'Focal Species')], default='Unknown', max_length=254, null=True),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='protection_level',
            field=models.CharField(blank=True, choices=[('Unknown', 'Unknown'), ('Strongly Protected', 'Strongly Protected'), ('Moderately Protected', 'Moderately Protected'), ('Protected', 'Protected'), ('Managed', 'Managed')], default='Unknown', editable=False, max_length=254, null=True),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='secondary_conservation_focus',
            field=models.CharField(blank=True, choices=[('Unknown', 'Unknown'), ('Biodiversity Protection', 'Biodiversity Protection'), ('Biomass Enhancement', 'Biomass Enhancement'), ('Cultural Heritage', 'Cultural Heritage')], default='Unknown', max_length=254, null=True),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='short_name',
            field=models.CharField(blank=True, help_text='Nickname if any', max_length=254),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='sovereign',
            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='Sovereign Country'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='status',
            field=models.CharField(blank=True, choices=[('Proposed', 'Proposed'), ('Designated', 'Designated'), ('Defunct/Degazetted', 'Defunct/Degazetted')], default='Designated', max_length=100, null=True, verbose_name='Status'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='status_year',
            field=models.IntegerField(blank=True, null=True, verbose_name='Status Year'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='sub_location',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Sub Location'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='summary',
            field=ckeditor.fields.RichTextField(blank=True, null=True, verbose_name='MPA Summary Site Description'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='tertiary_conservation_focus',
            field=models.CharField(blank=True, choices=[('Unknown', 'Unknown'), ('Biodiversity Protection', 'Biodiversity Protection'), ('Biomass Enhancement', 'Biomass Enhancement'), ('Cultural Heritage', 'Cultural Heritage')], default='Unknown', max_length=254, null=True),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='usmpa_id',
            field=models.CharField(blank=True, help_text='US NOAA MPA Center ID. You probably should not be changing this.', max_length=50, null=True, verbose_name='US MPA id'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='verification_reason',
            field=models.CharField(blank=True, max_length=1000, null=True, verbose_name='Verification Reason'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='verification_state',
            field=models.CharField(choices=[('Unverified', 'Unverified'), ('Cannot Verify', 'Cannot Verify'), ('Rejected as MPA', 'Rejected as MPA'), ('Internally Verified', 'Internally Verified'), ('Externally Verified', 'Externally Verified')], default='Unverified', max_length=100, verbose_name='Verification State'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='verified_by',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='Verified By'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='verified_date',
            field=models.DateField(blank=True, null=True, verbose_name='Date Verified'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='wdpa_id',
            field=models.IntegerField(blank=True, help_text='WDPA ID code. You probably should not be changing this.', null=True, verbose_name='WDPA id'),
        ),
        migrations.AlterField(
            model_name='mpa',
            name='wdpa_notes',
            field=models.CharField(blank=True, editable=False, max_length=250, null=True, verbose_name='Area Notes (from WDPA)'),
        ),
    ]
